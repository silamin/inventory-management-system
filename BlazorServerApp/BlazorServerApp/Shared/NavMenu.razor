@inject LoginManager loginManager
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components
@using System.Security.Claims

<div class="navbar navbar-dark" style="background-color: rgba(0, 0, 0, 0.4);">
    <div class="container-fluid d-flex justify-content-center align-items-center">
        <a class="navbar-brand d-flex align-items-center text-wrap" href="">
            <i class="fas fa-dolly me-2"></i>
            <span style="text-align: center;">Inventory Management System</span>
        </a>
        <button title="Navigation menu" class="navbar-toggler position-absolute end-0" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>






<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link d-flex align-items-center" href="/inventory-dashboard">
                    <i class="fas fa-home nav-icon me-2"></i>
                    <span>Home</span>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link d-flex align-items-center" href="/order-history">
                    <i class="fas fa-receipt nav-icon me-2"></i>
                    <span>Orders History</span>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link d-flex align-items-center" href="/manage-users">
                    <i class="fas fa-users-cog nav-icon me-2"></i>
                    <span>Manage Users</span>
                </NavLink>
            </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link d-flex align-items-center" @onclick="LogoutAsync" href="/login">
                <i class="fas fa-sign-out-alt nav-icon me-2"></i>
                <span>Log out</span>
            </NavLink>
        </div>
    </nav>
</div>


@code {
    private bool collapseNavMenu = true;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool isInventoryManager;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogoutAsync()
    {
        await loginManager.LogoutAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await UpdateUserRoleAsync();

        // Subscribe to authentication state changes
        AuthenticationStateProvider.AuthenticationStateChanged += OnAuthenticationStateChanged;
    }

    private async void OnAuthenticationStateChanged(Task<AuthenticationState> task)
    {
        await UpdateUserRoleAsync();
        StateHasChanged();
    }

    private async Task UpdateUserRoleAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isInventoryManager = user.Identity?.IsAuthenticated == true &&
                             user.IsInRole("INVENTORY_MANAGER");
    }

    public void Dispose()
    {
        // Unsubscribe to prevent memory leaks
        AuthenticationStateProvider.AuthenticationStateChanged -= OnAuthenticationStateChanged;
    }
}
