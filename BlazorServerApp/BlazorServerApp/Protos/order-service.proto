syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "user-service.proto";
import "item-service.proto";
package orders;

option java_multiple_files = true;
option java_package = "com.javainuse.orders";

service OrderService {
  rpc createOrder(CreateOrder) returns (CreateOrderResponse);
  rpc getOrders(Status) returns (OrderList);
  rpc updateOrderStatus(UpdateOrderStatusRequest) returns (google.protobuf.Empty); // New RPC
}

message Status {
  OrderStatus order_status = 1; // Status to filter orders
}

message CreateOrderResponse {
  bool success = 1;
}

message CreateOrder {
  repeated CreateOrderItem order_items = 1; // For creating, we only send item_ids
  google.protobuf.Timestamp delivery_date = 2;
  int32 created_by = 3;
}

message CreateOrderItem {
  int32 item_id = 1;
  int32 total_quantity = 2;
}

message Order {
  int32 order_id = 1;
  repeated GetOrderItem order_items = 2;
  google.protobuf.Timestamp created_at = 3;
  string assigned_user = 4;
  string created_by_user = 5;
  OrderStatus order_status = 6;
  google.protobuf.Timestamp delivery_date = 7;
  google.protobuf.Timestamp completed_at = 8;
}
message UpdateOrderStatusRequest {
  int32 order_id = 1;
  OrderStatus new_status = 2;
}

message GetOrderItem {
	int32 order_item_id = 1;
  string itemName = 2; // For fetching, we return the full item
  int32 quantity_to_pick = 3;
  int32 total_quantity = 4;
}

message OrderList {
  repeated Order orders = 1;
}

enum OrderStatus {
  NOT_STARTED = 0;
  IN_PROGRESS = 1;
  COMPLETED = 2;
}
